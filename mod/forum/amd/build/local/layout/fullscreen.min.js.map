{"version":3,"file":"fullscreen.min.js","sources":["../../../src/local/layout/fullscreen.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Full screen window layout.\n *\n * @copyright  2019 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {addIconToContainer} from 'core/loadingicon';\nimport {addToastRegion} from 'core/toast';\nimport * as FocusLockManager from 'core/local/aria/focuslock';\n\n/**\n * @param {string} templateName\n * @param {object} context\n * @return {object}\n */\nconst getComposedLayout = ({\n    fullscreen = true,\n    showLoader = false,\n    focusOnClose = null,\n} = {}) => {\n    const container = document.createElement('div');\n    document.body.append(container);\n    container.classList.add('layout');\n    container.classList.add('fullscreen');\n    container.setAttribute('role', 'application');\n    addToastRegion(container);\n\n    // Lock scrolling on the document body.\n    lockBodyScroll();\n\n    // Lock tab control.\n    FocusLockManager.trapFocus(container);\n\n    const helpers = getLayoutHelpers(container, FocusLockManager, focusOnClose);\n\n    if (showLoader) {\n        helpers.showLoadingIcon();\n    }\n\n    if (fullscreen) {\n        helpers.requestFullscreen();\n    }\n\n    return helpers;\n};\n\nconst getLayoutHelpers = (layoutNode, FocusLockManager, focusOnClose) => {\n    const contentNode = document.createElement('div');\n    layoutNode.append(contentNode);\n\n    const loadingNode = document.createElement('div');\n    layoutNode.append(loadingNode);\n\n    /**\n     * Close and destroy the window container.\n     */\n    const close = () => {\n        exitFullscreen();\n        unlockBodyScroll();\n        FocusLockManager.untrapFocus();\n\n        layoutNode.remove();\n\n        if (focusOnClose) {\n            try {\n                focusOnClose.focus();\n            } catch (e) {\n                // eslint-disable-line\n            }\n        }\n    };\n\n    /**\n     * Attempt to make the conatiner full screen.\n     */\n    const requestFullscreen = () => {\n        if (layoutNode.requestFullscreen) {\n            layoutNode.requestFullscreen();\n        } else if (layoutNode.msRequestFullscreen) {\n            layoutNode.msRequestFullscreen();\n        } else if (layoutNode.mozRequestFullscreen) {\n            layoutNode.mozRequestFullscreen();\n        } else if (layoutNode.webkitRequestFullscreen) {\n            layoutNode.webkitRequestFullscreen();\n        } else {\n            // Not supported.\n            // Hack to make this act like full-screen as much as possible.\n            layoutNode.setTop(0);\n        }\n    };\n\n    /**\n     * Exit full screen but do not close the container fully.\n     */\n    const exitFullscreen = () => {\n        if (document.exitRequestFullScreen) {\n            if (document.fullScreenElement !== layoutNode) {\n                return;\n            }\n            document.exitRequestFullScreen();\n        } else if (document.msExitFullscreen) {\n            if (document.msFullscreenElement !== layoutNode) {\n                return;\n            }\n            document.msExitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n            if (document.mozFullScreenElement !== layoutNode) {\n                return;\n            }\n            document.mozCancelFullScreen();\n        } else if (document.webkitExitFullscreen) {\n            if (document.webkitFullscreenElement !== layoutNode) {\n                return;\n            }\n            document.webkitExitFullscreen();\n        }\n    };\n\n    const toggleFullscreen = () => {\n        if (document.exitRequestFullScreen) {\n            if (document.fullScreenElement === layoutNode) {\n                exitFullscreen();\n            } else {\n                requestFullscreen();\n            }\n        } else if (document.msExitFullscreen) {\n            if (document.msFullscreenElement === layoutNode) {\n                exitFullscreen();\n            } else {\n                requestFullscreen();\n            }\n        } else if (document.mozCancelFullScreen) {\n            if (document.mozFullScreenElement === layoutNode) {\n                exitFullscreen();\n            } else {\n                requestFullscreen();\n            }\n        } else if (document.webkitExitFullscreen) {\n            if (document.webkitFullscreenElement === layoutNode) {\n                exitFullscreen();\n            } else {\n                requestFullscreen();\n            }\n        }\n    };\n\n    /**\n     * Get the Node which is fullscreen.\n     *\n     * @return {Element}\n     */\n    const getContainer = () => {\n        return contentNode;\n    };\n\n    const setContent = (content) => {\n        hideLoadingIcon();\n\n        // Note: It would be better to use replaceWith, but this is not compatible with IE.\n        let child = contentNode.lastElementChild;\n        while (child) {\n            contentNode.removeChild(child);\n            child = contentNode.lastElementChild;\n        }\n        contentNode.append(content);\n    };\n\n    const showLoadingIcon = () => {\n        addIconToContainer(loadingNode);\n    };\n\n    const hideLoadingIcon = () => {\n        // Hide the loading container.\n        let child = loadingNode.lastElementChild;\n        while (child) {\n            loadingNode.removeChild(child);\n            child = loadingNode.lastElementChild;\n        }\n    };\n\n    /**\n     * @return {Object}\n     */\n    return {\n        close,\n\n        toggleFullscreen,\n        requestFullscreen,\n        exitFullscreen,\n\n        getContainer,\n        setContent,\n\n        showLoadingIcon,\n        hideLoadingIcon,\n    };\n};\n\nconst lockBodyScroll = () => {\n    document.querySelector('body').classList.add('overflow-hidden');\n};\n\nconst unlockBodyScroll = () => {\n    document.querySelector('body').classList.remove('overflow-hidden');\n};\n\nexport const createLayout = getComposedLayout;\n"],"names":["getLayoutHelpers","layoutNode","FocusLockManager","focusOnClose","contentNode","document","createElement","append","loadingNode","requestFullscreen","msRequestFullscreen","mozRequestFullscreen","webkitRequestFullscreen","setTop","exitFullscreen","exitRequestFullScreen","fullScreenElement","msExitFullscreen","msFullscreenElement","mozCancelFullScreen","mozFullScreenElement","webkitExitFullscreen","webkitFullscreenElement","hideLoadingIcon","child","lastElementChild","removeChild","close","unlockBodyScroll","untrapFocus","remove","focus","e","toggleFullscreen","getContainer","setContent","content","showLoadingIcon","lockBodyScroll","querySelector","classList","add","createLayout","fullscreen","showLoader","container","body","setAttribute","trapFocus","helpers"],"mappings":";;;;;;4BA8DMA,iBAAmB,SAACC,WAAYC,iBAAkBC,kBAC9CC,YAAcC,SAASC,cAAc,OAC3CL,WAAWM,OAAOH,iBAEZI,YAAcH,SAASC,cAAc,OAC3CL,WAAWM,OAAOC,iBAwBZC,kBAAoB,WAClBR,WAAWQ,kBACXR,WAAWQ,oBACJR,WAAWS,oBAClBT,WAAWS,sBACJT,WAAWU,qBAClBV,WAAWU,uBACJV,WAAWW,wBAClBX,WAAWW,0BAIXX,WAAWY,OAAO,IAOpBC,eAAiB,cACfT,SAASU,sBAAuB,IAC5BV,SAASW,oBAAsBf,kBAGnCI,SAASU,6BACN,GAAIV,SAASY,iBAAkB,IAC9BZ,SAASa,sBAAwBjB,kBAGrCI,SAASY,wBACN,GAAIZ,SAASc,oBAAqB,IACjCd,SAASe,uBAAyBnB,kBAGtCI,SAASc,2BACN,GAAId,SAASgB,qBAAsB,IAClChB,SAASiB,0BAA4BrB,kBAGzCI,SAASgB,yBAyDXE,gBAAkB,mBAEhBC,MAAQhB,YAAYiB,iBACjBD,OACHhB,YAAYkB,YAAYF,OACxBA,MAAQhB,YAAYiB,wBAOrB,CACHE,MAhIU,cACVb,iBACAc,mBACA1B,iBAAiB2B,cAEjB5B,WAAW6B,SAEP3B,iBAEIA,aAAa4B,QACf,MAAOC,MAwHbC,iBApEqB,WACjB5B,SAASU,sBACLV,SAASW,oBAAsBf,WAC/Ba,iBAEAL,oBAEGJ,SAASY,iBACZZ,SAASa,sBAAwBjB,WACjCa,iBAEAL,oBAEGJ,SAASc,oBACZd,SAASe,uBAAyBnB,WAClCa,iBAEAL,oBAEGJ,SAASgB,uBACZhB,SAASiB,0BAA4BrB,WACrCa,iBAEAL,sBA8CRA,kBAAAA,kBACAK,eAAAA,eAEAoB,aAvCiB,kBACV9B,aAuCP+B,WApCe,SAACC,SAChBb,0BAGIC,MAAQpB,YAAYqB,iBACjBD,OACHpB,YAAYsB,YAAYF,OACxBA,MAAQpB,YAAYqB,iBAExBrB,YAAYG,OAAO6B,UA6BnBC,gBA1BoB,+CACD7B,cA0BnBe,gBAAAA,kBAIFe,eAAiB,WACnBjC,SAASkC,cAAc,QAAQC,UAAUC,IAAI,oBAG3Cb,iBAAmB,WACrBvB,SAASkC,cAAc,QAAQC,UAAUV,OAAO,oBAGvCY,aA/La,2EAItB,wBAHAC,WAAAA,0EACAC,WAAAA,4EACAzC,aAAAA,wCAAe,uBAET0C,UAAYxC,SAASC,cAAc,OACzCD,SAASyC,KAAKvC,OAAOsC,WACrBA,UAAUL,UAAUC,IAAI,UACxBI,UAAUL,UAAUC,IAAI,cACxBI,UAAUE,aAAa,OAAQ,yCAChBF,WAGfP,iBAGApC,iBAAiB8C,UAAUH,eAErBI,QAAUjD,iBAAiB6C,UAAW3C,iBAAkBC,qBAE1DyC,YACAK,QAAQZ,kBAGRM,YACAM,QAAQxC,oBAGLwC"}