{"version":3,"file":"message_drawer_view_conversation_renderer.min.js","sources":["../src/message_drawer_view_conversation_renderer.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module updates the UI for the conversation page in the message\n * drawer.\n *\n * The module will take a patch from the message_drawer_view_conversation_patcher\n * module and update the UI to reflect the changes.\n *\n * This is the only module that ever modifies the UI of the conversation page.\n *\n * @module     core_message/message_drawer_view_conversation_renderer\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(\n[\n    'jquery',\n    'core/notification',\n    'core/str',\n    'core/templates',\n    'core/user_date',\n    'core_message/message_drawer_view_conversation_constants'\n],\nfunction(\n    $,\n    Notification,\n    Str,\n    Templates,\n    UserDate,\n    Constants\n) {\n    var SELECTORS = Constants.SELECTORS;\n    var TEMPLATES = Constants.TEMPLATES;\n    var CONVERSATION_TYPES = Constants.CONVERSATION_TYPES;\n\n    /**\n     * Get the messages container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @return {Object} The messages container element.\n     */\n    var getMessagesContainer = function(body) {\n        return body.find(SELECTORS.CONTENT_MESSAGES_CONTAINER);\n    };\n\n    /**\n     * Show the messages container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     */\n    var showMessagesContainer = function(body) {\n        getMessagesContainer(body).removeClass('hidden');\n    };\n\n    /**\n     * Hide the messages container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     */\n    var hideMessagesContainer = function(body) {\n        getMessagesContainer(body).addClass('hidden');\n    };\n\n    /**\n     * Get the self-conversation message container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @return {Object} The messages container element.\n     */\n    var getSelfConversationMessageContainer = function(body) {\n        return body.find(SELECTORS.SELF_CONVERSATION_MESSAGE_CONTAINER);\n    };\n\n    /**\n     * Hide the self-conversation message container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @return {Object} The messages container element.\n     */\n    var hideSelfConversationMessageContainer = function(body) {\n        return getSelfConversationMessageContainer(body).addClass('hidden');\n    };\n\n    /**\n     * Get the contact request sent container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @return {Object} The messages container element.\n     */\n    var getContactRequestSentContainer = function(body) {\n        return body.find(SELECTORS.CONTACT_REQUEST_SENT_MESSAGE_CONTAINER);\n    };\n\n    /**\n     * Hide the contact request sent container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @return {Object} The messages container element.\n     */\n    var hideContactRequestSentContainer = function(body) {\n        return getContactRequestSentContainer(body).addClass('hidden');\n    };\n\n    /**\n     * Get the footer container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The footer container element.\n     */\n    var getFooterContentContainer = function(footer) {\n        return footer.find(SELECTORS.CONTENT_MESSAGES_FOOTER_CONTAINER);\n    };\n\n    /**\n     * Show the footer container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var showFooterContent = function(footer) {\n        getFooterContentContainer(footer).removeClass('hidden');\n    };\n\n    /**\n     * Hide the footer container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var hideFooterContent = function(footer) {\n        getFooterContentContainer(footer).addClass('hidden');\n    };\n\n    /**\n     * Get the footer edit mode container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The footer container element.\n     */\n    var getFooterEditModeContainer = function(footer) {\n        return footer.find(SELECTORS.CONTENT_MESSAGES_FOOTER_EDIT_MODE_CONTAINER);\n    };\n\n    /**\n     * Show the footer edit mode container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var showFooterEditMode = function(footer) {\n        getFooterEditModeContainer(footer).removeClass('hidden');\n    };\n\n    /**\n     * Hide the footer edit mode container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var hideFooterEditMode = function(footer) {\n        getFooterEditModeContainer(footer).addClass('hidden');\n    };\n\n    /**\n     * Get the footer placeholder.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The footer placeholder container element.\n     */\n    var getFooterPlaceholderContainer = function(footer) {\n        return footer.find(SELECTORS.PLACEHOLDER_CONTAINER);\n    };\n\n    /**\n     * Show the footer placeholder\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var showFooterPlaceholder = function(footer) {\n        getFooterPlaceholderContainer(footer).removeClass('hidden');\n    };\n\n    /**\n     * Hide the footer placeholder\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var hideFooterPlaceholder = function(footer) {\n        getFooterPlaceholderContainer(footer).addClass('hidden');\n    };\n\n    /**\n     * Get the footer Require add as contact container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The footer Require add as contact container element.\n     */\n    var getFooterRequireContactContainer = function(footer) {\n        return footer.find(SELECTORS.CONTENT_MESSAGES_FOOTER_REQUIRE_CONTACT_CONTAINER);\n    };\n\n    /**\n     * Show the footer add as contact dialogue.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var showFooterRequireContact = function(footer) {\n        getFooterRequireContactContainer(footer).removeClass('hidden');\n    };\n\n    /**\n     * Hide the footer add as contact dialogue.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var hideFooterRequireContact = function(footer) {\n        getFooterRequireContactContainer(footer).addClass('hidden');\n    };\n\n    /**\n     * Get the footer Required to unblock contact container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The footer Required to unblock contact container element.\n     */\n    var getFooterRequireUnblockContainer = function(footer) {\n        return footer.find(SELECTORS.CONTENT_MESSAGES_FOOTER_REQUIRE_UNBLOCK_CONTAINER);\n    };\n\n    /**\n     * Show the footer Required to unblock contact container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var showFooterRequireUnblock = function(footer) {\n        getFooterRequireUnblockContainer(footer).removeClass('hidden');\n    };\n\n    /**\n     * Hide the footer Required to unblock contact container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var hideFooterRequireUnblock = function(footer) {\n        getFooterRequireUnblockContainer(footer).addClass('hidden');\n    };\n\n    /**\n     * Get the footer Unable to message contact container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The footer Unable to message contact container element.\n     */\n    var getFooterUnableToMessageContainer = function(footer) {\n        return footer.find(SELECTORS.CONTENT_MESSAGES_FOOTER_UNABLE_TO_MESSAGE_CONTAINER);\n    };\n\n    /**\n     * Show the footer Unable to message contact container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var showFooterUnableToMessage = function(footer) {\n        getFooterUnableToMessageContainer(footer).removeClass('hidden');\n    };\n\n    /**\n     * Hide the footer Unable to message contact container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var hideFooterUnableToMessage = function(footer) {\n        getFooterUnableToMessageContainer(footer).addClass('hidden');\n    };\n\n    /**\n     * Hide all header elements.\n     *\n     * @param  {Object} header Conversation header container element.\n     */\n    var hideAllHeaderElements = function(header) {\n        hideHeaderContent(header);\n        hideHeaderEditMode(header);\n        hideHeaderPlaceholder(header);\n    };\n\n    /**\n     * Hide all footer dialogues and messages.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var hideAllFooterElements = function(footer) {\n        hideFooterContent(footer);\n        hideFooterEditMode(footer);\n        hideFooterPlaceholder(footer);\n        hideFooterRequireContact(footer);\n        hideFooterRequireUnblock(footer);\n        hideFooterUnableToMessage(footer);\n    };\n\n    /**\n     * Get the content placeholder container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @return {Object} The body placeholder container element.\n     */\n    var getContentPlaceholderContainer = function(body) {\n        return body.find(SELECTORS.CONTENT_PLACEHOLDER_CONTAINER);\n    };\n\n    /**\n     * Show the content placeholder.\n     *\n     * @param  {Object} body Conversation body container element.\n     */\n    var showContentPlaceholder = function(body) {\n        getContentPlaceholderContainer(body).removeClass('hidden');\n    };\n\n    /**\n     * Hide the content placeholder.\n     *\n     * @param  {Object} body Conversation body container element.\n     */\n    var hideContentPlaceholder = function(body) {\n        getContentPlaceholderContainer(body).addClass('hidden');\n    };\n\n    /**\n     * Get the header content container element.\n     *\n     * @param  {Object} header Conversation header container element.\n     * @return {Object} The header content container element.\n     */\n    var getHeaderContent = function(header) {\n        return header.find(SELECTORS.HEADER);\n    };\n\n    /**\n     * Show the header content.\n     *\n     * @param  {Object} header Conversation header container element.\n     */\n    var showHeaderContent = function(header) {\n        getHeaderContent(header).removeClass('hidden');\n    };\n\n    /**\n     * Hide the header content.\n     *\n     * @param  {Object} header Conversation header container element.\n     */\n    var hideHeaderContent = function(header) {\n        getHeaderContent(header).addClass('hidden');\n    };\n\n    /**\n     * Get the header edit mode container element.\n     *\n     * @param  {Object} header Conversation header container element.\n     * @return {Object} The header content container element.\n     */\n    var getHeaderEditMode = function(header) {\n        return header.find(SELECTORS.HEADER_EDIT_MODE);\n    };\n\n    /**\n     * Show the header edit mode container.\n     *\n     * @param  {Object} header Conversation header container element.\n     */\n    var showHeaderEditMode = function(header) {\n        getHeaderEditMode(header).removeClass('hidden');\n    };\n\n    /**\n     * Hide the header edit mode container.\n     *\n     * @param  {Object} header Conversation header container element.\n     */\n    var hideHeaderEditMode = function(header) {\n        getHeaderEditMode(header).addClass('hidden');\n    };\n\n    /**\n     * Get the header placeholder container element.\n     *\n     * @param  {Object} header Conversation header container element.\n     * @return {Object} The header placeholder container element.\n     */\n    var getHeaderPlaceholderContainer = function(header) {\n        return header.find(SELECTORS.HEADER_PLACEHOLDER_CONTAINER);\n    };\n\n    /**\n     * Show the header placeholder.\n     *\n     * @param  {Object} header Conversation header container element.\n     */\n    var showHeaderPlaceholder = function(header) {\n        getHeaderPlaceholderContainer(header).removeClass('hidden');\n    };\n\n    /**\n     * Hide the header placeholder.\n     *\n     * @param  {Object} header Conversation header container element.\n     */\n    var hideHeaderPlaceholder = function(header) {\n        getHeaderPlaceholderContainer(header).addClass('hidden');\n    };\n\n    /**\n     * Get the emoji picker container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The emoji picker container element.\n     */\n    var getEmojiPickerContainer = function(footer) {\n        return footer.find(SELECTORS.EMOJI_PICKER_CONTAINER);\n    };\n\n    /**\n     * Get the emoji picker container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The emoji picker container element.\n     */\n    var getEmojiAutoCompleteContainer = function(footer) {\n        return footer.find(SELECTORS.EMOJI_AUTO_COMPLETE_CONTAINER);\n    };\n\n    /**\n     * Get a message element.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @param  {Number} messageId the Message id.\n     * @return {Object} A message element from the conversation.\n     */\n    var getMessageElement = function(body, messageId) {\n        var messagesContainer = getMessagesContainer(body);\n        return messagesContainer.find('[data-message-id=\"' + messageId + '\"]');\n    };\n\n    /**\n     * Get the day container element. The day container element holds a list of messages for that day.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @param  {Number} dayTimeCreated Midnight timestamp for the day.\n     * @return {Object} jQuery object\n     */\n    var getDayElement = function(body, dayTimeCreated) {\n        var messagesContainer = getMessagesContainer(body);\n        return messagesContainer.find('[data-day-id=\"' + dayTimeCreated + '\"]');\n    };\n\n    /**\n     * Get the more messages loading icon container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @return {Object} The more messages loading container element.\n     */\n    var getMoreMessagesLoadingIconContainer = function(body) {\n        return body.find(SELECTORS.MORE_MESSAGES_LOADING_ICON_CONTAINER);\n    };\n\n    /**\n     * Show the more messages loading icon.\n     *\n     * @param  {Object} body Conversation body container element.\n     */\n    var showMoreMessagesLoadingIcon = function(body) {\n        getMoreMessagesLoadingIconContainer(body).removeClass('hidden');\n    };\n\n    /**\n     * Hide the more messages loading icon.\n     *\n     * @param  {Object} body Conversation body container element.\n     */\n    var hideMoreMessagesLoadingIcon = function(body) {\n        getMoreMessagesLoadingIconContainer(body).addClass('hidden');\n    };\n\n    /**\n     * Get the confirm dialogue container element.\n     *\n     * @param  {Object} root The container element to search.\n     * @return {Object} The confirm dialogue container element.\n     */\n    var getConfirmDialogueContainer = function(root) {\n        return root.find(SELECTORS.CONFIRM_DIALOGUE_CONTAINER);\n    };\n\n    /**\n     * Show the confirm dialogue container element.\n     *\n     * @param  {Object} root The container element containing a dialogue.\n     */\n    var showConfirmDialogueContainer = function(root) {\n        var container = getConfirmDialogueContainer(root);\n        var siblings = container.siblings(':not(.hidden)');\n        siblings.attr('aria-hidden', true);\n        siblings.attr('tabindex', -1);\n        siblings.attr('data-confirm-dialogue-hidden', true);\n\n        container.removeClass('hidden');\n    };\n\n    /**\n     * Hide the confirm dialogue container element.\n     *\n     * @param  {Object} root The container element containing a dialogue.\n     */\n    var hideConfirmDialogueContainer = function(root) {\n        var container = getConfirmDialogueContainer(root);\n        var siblings = container.siblings('[data-confirm-dialogue-hidden=\"true\"]');\n        siblings.removeAttr('aria-hidden');\n        siblings.removeAttr('tabindex');\n        siblings.removeAttr('data-confirm-dialogue-hidden');\n\n        container.addClass('hidden');\n    };\n\n    /**\n     * Set the number of selected messages.\n     *\n     * @param {Object} header The header container element.\n     * @param {Number} value The new number to display.\n     */\n    var setMessagesSelectedCount = function(header, value) {\n        getHeaderEditMode(header).find(SELECTORS.MESSAGES_SELECTED_COUNT).text(value);\n    };\n\n    /**\n     * Format message for the mustache template, transform camelCase properties to lowercase properties.\n     *\n     * @param  {Array} messages Array of message objects.\n     * @param  {Object} datesCache Cache timestamps and their formatted date string.\n     * @return {Array} Messages formated for mustache template.\n     */\n    var formatMessagesForTemplate = function(messages, datesCache) {\n        return messages.map(function(message) {\n            return {\n                id: message.id,\n                isread: message.isRead,\n                fromloggedinuser: message.fromLoggedInUser,\n                userfrom: message.userFrom,\n                text: message.text,\n                formattedtime: message.timeCreated ? datesCache[message.timeCreated] : null\n            };\n        });\n    };\n\n    /**\n     * Create rendering promises for each day containing messages.\n     *\n     * @param  {Object} header The header container element.\n     * @param  {Object} body The body container element.\n     * @param  {Object} footer The footer container element.\n     * @param  {Array} days Array of days containing messages.\n     * @param  {Object} datesCache Cache timestamps and their formatted date string.\n     * @return {Promise} Days rendering promises.\n     */\n    var renderAddDays = function(header, body, footer, days, datesCache) {\n        var messagesContainer = getMessagesContainer(body);\n        var daysRenderPromises = days.map(function(data) {\n            return Templates.render(TEMPLATES.DAY, {\n                timestamp: data.value.timestamp,\n                messages: formatMessagesForTemplate(data.value.messages, datesCache)\n            });\n        });\n\n        return $.when.apply($, daysRenderPromises).then(function() {\n            // Wait until all of the rendering is done for each of the days\n            // to ensure they are added to the page in the correct order.\n            days.forEach(function(data, index) {\n                daysRenderPromises[index]\n                    .then(function(html) {\n                        if (data.before) {\n                            var element = getDayElement(body, data.before.timestamp);\n                            return $(html).insertBefore(element);\n                        } else {\n                            return messagesContainer.append(html);\n                        }\n                    })\n                    .catch(function() {\n                        // Fail silently.\n                    });\n            });\n\n            return;\n        });\n    };\n\n    /**\n     * Add (more) messages to day containers.\n     *\n     * @param  {Object} header The header container element.\n     * @param  {Object} body The body container element.\n     * @param  {Object} footer The footer container element.\n     * @param  {Array} messages List of messages.\n     * @param  {Object} datesCache Cache timestamps and their formatted date string.\n     * @return {Promise} Messages rendering promises.\n     */\n    var renderAddMessages = function(header, body, footer, messages, datesCache) {\n        var messagesData = messages.map(function(data) {\n            return data.value;\n        });\n        var formattedMessages = formatMessagesForTemplate(messagesData, datesCache);\n\n        return Templates.render(TEMPLATES.MESSAGES, {messages: formattedMessages})\n            .then(function(html) {\n                var messageList = $(html);\n                messages.forEach(function(data) {\n                    var messageHtml = messageList.find('[data-message-id=\"' + data.value.id + '\"]');\n                    if (data.before) {\n                        var element = getMessageElement(body, data.before.id);\n                        return messageHtml.insertBefore(element);\n                    } else {\n                        var dayContainer = getDayElement(body, data.day.timestamp);\n                        var dayMessagesContainer = dayContainer.find(SELECTORS.DAY_MESSAGES_CONTAINER);\n                        return dayMessagesContainer.append(messageHtml);\n                    }\n                });\n\n                return;\n            });\n    };\n\n    /**\n     * Update existing messages.\n     *\n     * @param  {Object} header The header container element.\n     * @param  {Object} body The body container element.\n     * @param  {Object} footer The footer container element.\n     * @param  {Array} messages List of messages.\n     * @param  {Object} datesCache Cache timestamps and their formatted date string.\n     */\n    var renderUpdateMessages = function(header, body, footer, messages, datesCache) {\n        messages.forEach(function(message) {\n            var before = message.before;\n            var after = message.after;\n            var element = getMessageElement(body, before.id);\n\n            if (before.id != after.id) {\n                element.attr('data-message-id', after.id);\n            }\n\n            if (before.timeCreated != after.timeCreated) {\n                var formattedTime = datesCache[after.timeCreated];\n                element.find(SELECTORS.LOADING_ICON_CONTAINER).addClass('hidden');\n                element.find(SELECTORS.TIME_CREATED).text(formattedTime).removeClass('hidden');\n            }\n\n            if (before.sendState != after.sendState) {\n                var loading = element.find(SELECTORS.LOADING_ICON_CONTAINER);\n                var time = element.find(SELECTORS.TIME_CREATED);\n                var retry = element.find(SELECTORS.RETRY_SEND);\n\n                loading.addClass('hidden');\n                loading.attr('aria-hidden', 'true');\n                time.addClass('hidden');\n                time.attr('aria-hidden', 'true');\n                retry.addClass('hidden');\n                retry.attr('aria-hidden', 'true');\n                element.removeClass('border border-danger');\n\n                switch (after.sendState) {\n                    case 'pending':\n                        loading.removeClass('hidden');\n                        loading.attr('aria-hidden', 'false');\n                        break;\n                    case 'error':\n                        retry.removeClass('hidden');\n                        retry.attr('aria-hidden', 'false');\n                        element.addClass('border border-danger');\n                        break;\n                    case 'sent':\n                        time.removeClass('hidden');\n                        time.attr('aria-hidden', 'false');\n                        break;\n                }\n            }\n\n            if (before.text != after.text) {\n                element.find(SELECTORS.TEXT_CONTAINER).html(after.text);\n            }\n\n            if (before.errorMessage != after.errorMessage) {\n                var messageContainer = element.find(SELECTORS.ERROR_MESSAGE_CONTAINER);\n                var message = messageContainer.find(SELECTORS.ERROR_MESSAGE);\n\n                if (after.errorMessage) {\n                    messageContainer.removeClass('hidden');\n                    messageContainer.attr('aria-hidden', 'false');\n                    message.text(after.errorMessage);\n                } else {\n                    messageContainer.addClass('hidden');\n                    messageContainer.attr('aria-hidden', 'true');\n                    message.text('');\n                }\n            }\n        });\n    };\n\n    /**\n     * Remove days from conversation.\n     *\n     * @param  {Object} body The body container element.\n     * @param  {Array} days Array of days to be removed.\n     */\n    var renderRemoveDays = function(body, days) {\n        days.forEach(function(data) {\n            getDayElement(body, data.timestamp).remove();\n        });\n    };\n\n    /**\n     * Remove messages from conversation.\n     *\n     * @param  {Object} body The body container element.\n     * @param  {Array} messages Array of messages to be removed.\n     */\n    var renderRemoveMessages = function(body, messages) {\n        messages.forEach(function(data) {\n            getMessageElement(body, data.id).remove();\n        });\n    };\n\n    /**\n     * Render the full conversation base on input from the statemanager.\n     *\n     * This will pre-load all of the formatted timestamps for each message that\n     * needs to render to reduce the number of networks requests.\n     *\n     * @param  {Object} header The header container element.\n     * @param  {Object} body The body container element.\n     * @param  {Object} footer The footer container element.\n     * @param  {Object} data The conversation diff.\n     * @return {Object} jQuery promise.\n     */\n    var renderConversation = function(header, body, footer, data) {\n        var renderingPromises = [];\n        var hasAddDays = data.days.add.length > 0;\n        var hasAddMessages = data.messages.add.length > 0;\n        var hasUpdateMessages = data.messages.update.length > 0;\n        var timestampsToFormat = [];\n        var datesCachePromise = $.Deferred().resolve({}).promise();\n\n        if (hasAddDays) {\n            // Search for all of the timeCreated values in all of the messages in all of\n            // the days that we need to render.\n            timestampsToFormat = timestampsToFormat.concat(data.days.add.reduce(function(carry, day) {\n                return carry.concat(day.value.messages.reduce(function(timestamps, message) {\n                    if (message.timeCreated) {\n                        timestamps.push(message.timeCreated);\n                    }\n                    return timestamps;\n                }, []));\n            }, []));\n        }\n\n        if (hasAddMessages) {\n            // Search for all of the timeCreated values in all of the messages that we\n            // need to render.\n            timestampsToFormat = timestampsToFormat.concat(data.messages.add.reduce(function(timestamps, message) {\n                if (message.value.timeCreated) {\n                    timestamps.push(message.value.timeCreated);\n                }\n                return timestamps;\n            }, []));\n        }\n\n        if (hasUpdateMessages) {\n            timestampsToFormat = timestampsToFormat.concat(data.messages.update.reduce(function(timestamps, message) {\n                if (message.before.timeCreated != message.after.timeCreated) {\n                    timestamps.push(message.after.timeCreated);\n                }\n                return timestamps;\n            }, []));\n        }\n\n        if (timestampsToFormat.length) {\n            // If we have timestamps then pre-load the formatted version of each of them\n            // in a single request to the server. This saves the templates doing multiple\n            // individual requests.\n            datesCachePromise = Str.get_string('strftimetime24', 'core_langconfig')\n                .then(function(format) {\n                    var requests = timestampsToFormat.map(function(timestamp) {\n                        return {\n                            timestamp: timestamp,\n                            format: format\n                        };\n                    });\n\n                    return UserDate.get(requests);\n                })\n                .then(function(formattedTimes) {\n                    return timestampsToFormat.reduce(function(carry, timestamp, index) {\n                        carry[timestamp] = formattedTimes[index];\n                        return carry;\n                    }, {});\n                });\n        }\n\n        if (hasAddDays) {\n            renderingPromises.push(datesCachePromise.then(function(datesCache) {\n                return renderAddDays(header, body, footer, data.days.add, datesCache);\n            }));\n        }\n\n        if (hasAddMessages) {\n            renderingPromises.push(datesCachePromise.then(function(datesCache) {\n                return renderAddMessages(header, body, footer, data.messages.add, datesCache);\n            }));\n        }\n\n        if (hasUpdateMessages) {\n            renderingPromises.push(datesCachePromise.then(function(datesCache) {\n                return renderUpdateMessages(header, body, footer, data.messages.update, datesCache);\n            }));\n        }\n\n        if (data.days.remove.length > 0) {\n            renderRemoveDays(body, data.days.remove);\n        }\n\n        if (data.messages.remove.length > 0) {\n            renderRemoveMessages(body, data.messages.remove);\n        }\n\n        return $.when.apply($, renderingPromises);\n    };\n\n    /**\n     * Render the conversation header.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} data Data for header.\n     * @return {Object} jQuery promise\n     */\n    var renderHeader = function(header, body, footer, data) {\n        var headerContainer = getHeaderContent(header);\n        var template = TEMPLATES.HEADER_PUBLIC;\n        data.context.showrouteback = (header.attr('data-from-panel') === \"false\");\n        if (data.type == CONVERSATION_TYPES.PRIVATE) {\n            template = data.showControls ? TEMPLATES.HEADER_PRIVATE : TEMPLATES.HEADER_PRIVATE_NO_CONTROLS;\n        } else if (data.type == CONVERSATION_TYPES.SELF) {\n            template = TEMPLATES.HEADER_SELF;\n        }\n\n        return Templates.render(template, data.context)\n            .then(function(html, js) {\n                Templates.replaceNodeContents(headerContainer, html, js);\n                return;\n            });\n    };\n\n    /**\n     * Render the conversation footer.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} data Data for footer.\n     * @return {Object} jQuery promise.\n     */\n    var renderFooter = function(header, body, footer, data) {\n        hideAllFooterElements(footer);\n\n        switch (data.type) {\n            case 'placeholder':\n                return showFooterPlaceholder(footer);\n            case 'add-contact':\n                return Str.get_strings([\n                        {\n                            key: 'requirecontacttomessage',\n                            component: 'core_message',\n                            param: data.user.fullname\n                        },\n                        {\n                            key: 'isnotinyourcontacts',\n                            component: 'core_message',\n                            param: data.user.fullname\n                        }\n                    ])\n                    .then(function(strings) {\n                        var title = strings[1];\n                        var text = strings[0];\n                        var footerContainer = getFooterRequireContactContainer(footer);\n                        footerContainer.find(SELECTORS.TITLE).text(title);\n                        footerContainer.find(SELECTORS.TEXT).text(text);\n                        showFooterRequireContact(footer);\n                        return strings;\n                    });\n            case 'edit-mode':\n                return showFooterEditMode(footer);\n            case 'content':\n                return showFooterContent(footer);\n            case 'unblock':\n                return showFooterRequireUnblock(footer);\n            case 'unable-to-message':\n                return showFooterUnableToMessage(footer);\n        }\n\n        return true;\n    };\n\n    /**\n     * Scroll to a message in the conversation.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Number} messageId Message id.\n     */\n    var renderScrollToMessage = function(header, body, footer, messageId) {\n        var messagesContainer = getMessagesContainer(body);\n        var messageElement = getMessageElement(body, messageId);\n        var position = messageElement.position();\n        // Scroll the message container down to the top of the message element.\n        if (position) {\n            var scrollTop = messagesContainer.scrollTop() + position.top;\n            messagesContainer.scrollTop(scrollTop);\n        }\n    };\n\n    /**\n     * Hide or show the conversation header.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} isLoadingMembers Members loading.\n     */\n    var renderLoadingMembers = function(header, body, footer, isLoadingMembers) {\n        if (isLoadingMembers) {\n            hideHeaderContent(header);\n            showHeaderPlaceholder(header);\n        } else {\n            showHeaderContent(header);\n            hideHeaderPlaceholder(header);\n        }\n    };\n\n    /**\n     * Hide or show loading conversation messages.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} isLoadingFirstMessages Messages loading.\n     */\n    var renderLoadingFirstMessages = function(header, body, footer, isLoadingFirstMessages) {\n        if (isLoadingFirstMessages) {\n            hideMessagesContainer(body);\n            showContentPlaceholder(body);\n        } else {\n            showMessagesContainer(body);\n            hideContentPlaceholder(body);\n        }\n    };\n\n    /**\n     * Hide or show loading more messages.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} isLoading Messages loading.\n     */\n    var renderLoadingMessages = function(header, body, footer, isLoading) {\n        if (isLoading) {\n            showMoreMessagesLoadingIcon(body);\n        } else {\n            hideMoreMessagesLoadingIcon(body);\n        }\n    };\n\n    /**\n     * Hide or show the emoji picker.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} show Should the emoji picker be visible.\n     */\n    var renderShowEmojiPicker = function(header, body, footer, show) {\n        var container = getEmojiPickerContainer(footer);\n\n        if (show) {\n            container.removeClass('hidden');\n            container.attr('aria-hidden', false);\n            container.find(SELECTORS.EMOJI_PICKER_SEARCH_INPUT).focus();\n        } else {\n            container.addClass('hidden');\n            container.attr('aria-hidden', true);\n        }\n    };\n\n    /**\n     * Hide or show the emoji auto complete.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} show Should the emoji picker be visible.\n     */\n    var renderShowEmojiAutoComplete = function(header, body, footer, show) {\n        var container = getEmojiAutoCompleteContainer(footer);\n\n        if (show) {\n            container.removeClass('hidden');\n            container.attr('aria-hidden', false);\n        } else {\n            container.addClass('hidden');\n            container.attr('aria-hidden', true);\n        }\n    };\n\n    /**\n     * Show a confirmation dialogue\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {String} buttonSelectors Selectors for the buttons to show.\n     * @param {String} bodyText Text to show in dialogue.\n     * @param {String} headerText Text to show in dialogue header.\n     * @param {Bool} canCancel Can this dialogue be cancelled.\n     * @param {Bool} skipHeader Skip blanking out the header\n     * @param {Bool} showOk Show an 'Okay' button for a dialogue which will close it\n     */\n    var showConfirmDialogue = function(\n        header,\n        body,\n        footer,\n        buttonSelectors,\n        bodyText,\n        headerText,\n        canCancel,\n        skipHeader,\n        showOk\n    ) {\n        var dialogue = getConfirmDialogueContainer(body);\n        var buttons = buttonSelectors.map(function(selector) {\n            return dialogue.find(selector);\n        });\n        var cancelButton = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_CANCEL_BUTTON);\n        var okayButton = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_OKAY_BUTTON);\n        var text = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_TEXT);\n        var dialogueHeader = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_HEADER);\n\n        dialogue.find('button').addClass('hidden');\n\n        if (canCancel) {\n            cancelButton.removeClass('hidden');\n        } else {\n            cancelButton.addClass('hidden');\n        }\n\n        if (showOk) {\n            okayButton.removeClass('hidden');\n        } else {\n            okayButton.addClass('hidden');\n        }\n\n        if (headerText) {\n            // Create the dialogue header.\n            dialogueHeader = $('<h3 class=\"h6\" data-region=\"dialogue-header\"></h3>');\n            dialogueHeader.text(headerText);\n            // Prepend it to the confirmation body.\n            var confirmDialogue = dialogue.find(SELECTORS.CONFIRM_DIALOGUE);\n            confirmDialogue.prepend(dialogueHeader);\n        } else if (dialogueHeader.length) {\n            // Header text is empty but dialogue header is present, so remove it.\n            dialogueHeader.remove();\n        }\n\n        buttons.forEach(function(button) {\n            button.removeClass('hidden');\n        });\n        text.text(bodyText);\n        showConfirmDialogueContainer(footer);\n        showConfirmDialogueContainer(body);\n\n        if (!skipHeader) {\n            showConfirmDialogueContainer(header);\n        }\n\n        dialogue.find(SELECTORS.CAN_RECEIVE_FOCUS).filter(':visible').first().focus();\n    };\n\n    /**\n     * Hide the dialogue\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @return {Bool} always true.\n     */\n    var hideConfirmDialogue = function(header, body, footer) {\n        var dialogue = getConfirmDialogueContainer(body);\n        var cancelButton = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_CANCEL_BUTTON);\n        var okayButton = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_OKAY_BUTTON);\n        var text = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_TEXT);\n        var dialogueHeader = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_HEADER);\n\n        hideCheckDeleteDialogue(body);\n        hideConfirmDialogueContainer(body);\n        hideConfirmDialogueContainer(footer);\n        hideConfirmDialogueContainer(header);\n        dialogue.find('button').addClass('hidden');\n        cancelButton.removeClass('hidden');\n        okayButton.removeClass('hidden');\n        text.text('');\n\n        // Remove dialogue header if present.\n        if (dialogueHeader.length) {\n            dialogueHeader.remove();\n        }\n\n        header.find(SELECTORS.CAN_RECEIVE_FOCUS).first().focus();\n        return true;\n    };\n\n    /**\n     * Render the confirm block user dialogue.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} user User to block.\n     * @return {Object} jQuery promise\n     */\n    var renderConfirmBlockUser = function(header, body, footer, user) {\n        if (user) {\n            if (user.canmessageevenifblocked) {\n                return Str.get_string('cantblockuser', 'core_message', user.fullname)\n                    .then(function(string) {\n                        return showConfirmDialogue(header, body, footer, [], string, '', false, false, true);\n                    });\n            } else {\n                return Str.get_string('blockuserconfirm', 'core_message', user.fullname)\n                    .then(function(string) {\n                        return showConfirmDialogue(header, body, footer, [SELECTORS.ACTION_CONFIRM_BLOCK], string, '', true, false);\n                    });\n            }\n        } else {\n            return hideConfirmDialogue(header, body, footer);\n        }\n    };\n\n    /**\n     * Render the confirm unblock user dialogue.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} user User to unblock.\n     * @return {Object} jQuery promise\n     */\n    var renderConfirmUnblockUser = function(header, body, footer, user) {\n        if (user) {\n            return Str.get_string('unblockuserconfirm', 'core_message', user.fullname)\n                .then(function(string) {\n                    return showConfirmDialogue(header, body, footer, [SELECTORS.ACTION_CONFIRM_UNBLOCK], string, '', true, false);\n                });\n        } else {\n            return hideConfirmDialogue(header, body, footer);\n        }\n    };\n\n    /**\n     * Render the add user as contact dialogue.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} user User to add as contact.\n     * @return {Object} jQuery promise\n     */\n    var renderConfirmAddContact = function(header, body, footer, user) {\n        if (user) {\n            return Str.get_string('addcontactconfirm', 'core_message', user.fullname)\n                .then(function(string) {\n                    return showConfirmDialogue(\n                        header,\n                        body,\n                        footer,\n                        [SELECTORS.ACTION_CONFIRM_ADD_CONTACT],\n                        string,\n                        '',\n                        true,\n                        false\n                    );\n                });\n        } else {\n            return hideConfirmDialogue(header, body, footer);\n        }\n    };\n\n    /**\n     * Render the remove user from contacts dialogue.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} user User to remove from contacts.\n     * @return {Object} jQuery promise\n     */\n    var renderConfirmRemoveContact = function(header, body, footer, user) {\n        if (user) {\n            return Str.get_string('removecontactconfirm', 'core_message', user.fullname)\n                .then(function(string) {\n                    return showConfirmDialogue(\n                        header,\n                        body,\n                        footer,\n                        [SELECTORS.ACTION_CONFIRM_REMOVE_CONTACT],\n                        string,\n                        '',\n                        true,\n                        false\n                    );\n                });\n        } else {\n            return hideConfirmDialogue(header, body, footer);\n        }\n    };\n\n    /**\n     * Render the delete selected messages dialogue.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} data If the dialogue should show and checkbox shows to delete message for all users.\n     * @return {Object} jQuery promise\n     */\n    var renderConfirmDeleteSelectedMessages = function(header, body, footer, data) {\n        var showmessage = null;\n        if (data.type == CONVERSATION_TYPES.SELF) {\n            // Message displayed to self-conversations is slighly different.\n            showmessage = 'deleteselectedmessagesconfirmselfconversation';\n        } else {\n            // This other message should be displayed.\n            if (data.canDeleteMessagesForAllUsers) {\n                showCheckDeleteDialogue(body);\n                showmessage = 'deleteforeveryoneselectedmessagesconfirm';\n            } else {\n                showmessage = 'deleteselectedmessagesconfirm';\n            }\n        }\n\n        if (data.show) {\n            return Str.get_string(showmessage, 'core_message')\n                .then(function(string) {\n                    return showConfirmDialogue(\n                        header,\n                        body,\n                        footer,\n                        [SELECTORS.ACTION_CONFIRM_DELETE_SELECTED_MESSAGES],\n                        string,\n                        '',\n                        true,\n                        false\n                    );\n                });\n        } else {\n            return hideConfirmDialogue(header, body, footer);\n        }\n    };\n\n    /**\n     * Render the confirm delete conversation dialogue.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {int|Null} type The conversation type to be removed.\n     * @return {Object} jQuery promise\n     */\n    var renderConfirmDeleteConversation = function(header, body, footer, type) {\n        var showmessage = null;\n        if (type == CONVERSATION_TYPES.SELF) {\n            // Message displayed to self-conversations is slighly different.\n            showmessage = 'deleteallselfconfirm';\n        } else if (type) {\n            // This other message should be displayed.\n            showmessage = 'deleteallconfirm';\n        }\n\n        if (showmessage) {\n            return Str.get_string(showmessage, 'core_message')\n                .then(function(string) {\n                    return showConfirmDialogue(\n                        header,\n                        body,\n                        footer,\n                        [SELECTORS.ACTION_CONFIRM_DELETE_CONVERSATION],\n                        string,\n                        '',\n                        true,\n                        false\n                    );\n                });\n        } else {\n            return hideConfirmDialogue(header, body, footer);\n        }\n    };\n\n    /**\n     * Render the confirm delete conversation dialogue.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} user The other user object.\n     * @return {Object} jQuery promise\n     */\n    var renderConfirmContactRequest = function(header, body, footer, user) {\n        if (user) {\n            return Str.get_string('userwouldliketocontactyou', 'core_message', user.fullname)\n                .then(function(string) {\n                    var buttonSelectors = [\n                        SELECTORS.ACTION_ACCEPT_CONTACT_REQUEST,\n                        SELECTORS.ACTION_DECLINE_CONTACT_REQUEST\n                    ];\n                    return showConfirmDialogue(header, body, footer, buttonSelectors, string, '', false, true);\n                });\n        } else {\n            return hideConfirmDialogue(header, body, footer);\n        }\n    };\n\n    /**\n     * Show the checkbox to allow delete message for all.\n     *\n     * @param {Object} body The body container element.\n     */\n    var showCheckDeleteDialogue = function(body) {\n        var dialogue = getConfirmDialogueContainer(body);\n        var checkboxRegion = dialogue.find(SELECTORS.DELETE_MESSAGES_FOR_ALL_USERS_TOGGLE_CONTAINER);\n        checkboxRegion.removeClass('hidden');\n    };\n\n    /**\n     * Hide the checkbox to allow delete message for all.\n     *\n     * @param {Object} body The body container element.\n     */\n    var hideCheckDeleteDialogue = function(body) {\n        var dialogue = getConfirmDialogueContainer(body);\n        var checkboxRegion = dialogue.find(SELECTORS.DELETE_MESSAGES_FOR_ALL_USERS_TOGGLE_CONTAINER);\n        var checkbox = dialogue.find(SELECTORS.DELETE_MESSAGES_FOR_ALL_USERS_TOGGLE);\n        checkbox.prop('checked', false);\n        checkboxRegion.addClass('hidden');\n    };\n\n    /**\n     * Show or hide the block / unblock option in the header dropdown menu.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} isBlocked is user blocked.\n     */\n    var renderIsBlocked = function(header, body, footer, isBlocked) {\n        if (isBlocked) {\n            header.find(SELECTORS.ACTION_REQUEST_BLOCK).addClass('hidden');\n            header.find(SELECTORS.ACTION_REQUEST_UNBLOCK).removeClass('hidden');\n        } else {\n            header.find(SELECTORS.ACTION_REQUEST_BLOCK).removeClass('hidden');\n            header.find(SELECTORS.ACTION_REQUEST_UNBLOCK).addClass('hidden');\n        }\n    };\n\n    /**\n     * Show or hide the favourite / unfavourite option in the header dropdown menu\n     * and the favourite star in the header title.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} isFavourite is this conversation a favourite.\n     */\n    var renderIsFavourite = function(header, body, footer, state) {\n        var favouriteIcon = header.find(SELECTORS.FAVOURITE_ICON_CONTAINER);\n        var addFavourite = header.find(SELECTORS.ACTION_CONFIRM_FAVOURITE);\n        var removeFavourite = header.find(SELECTORS.ACTION_CONFIRM_UNFAVOURITE);\n\n        switch (state) {\n            case 'hide':\n                favouriteIcon.addClass('hidden');\n                addFavourite.addClass('hidden');\n                removeFavourite.addClass('hidden');\n                break;\n            case 'show-add':\n                favouriteIcon.addClass('hidden');\n                addFavourite.removeClass('hidden');\n                removeFavourite.addClass('hidden');\n                break;\n            case 'show-remove':\n                favouriteIcon.removeClass('hidden');\n                addFavourite.addClass('hidden');\n                removeFavourite.removeClass('hidden');\n                break;\n        }\n    };\n\n    /**\n     * Show or hide the mute / unmute option in the header dropdown menu\n     * and the muted icon in the header title.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {string} state The state of the conversation as defined by the patcher.\n     */\n    var renderIsMuted = function(header, body, footer, state) {\n        var muteIcon = header.find(SELECTORS.MUTED_ICON_CONTAINER);\n        var setMuted = header.find(SELECTORS.ACTION_CONFIRM_MUTE);\n        var unsetMuted = header.find(SELECTORS.ACTION_CONFIRM_UNMUTE);\n\n        switch (state) {\n            case 'hide':\n                muteIcon.addClass('hidden');\n                setMuted.addClass('hidden');\n                unsetMuted.addClass('hidden');\n                break;\n            case 'show-mute':\n                muteIcon.addClass('hidden');\n                setMuted.removeClass('hidden');\n                unsetMuted.addClass('hidden');\n                break;\n            case 'show-unmute':\n                muteIcon.removeClass('hidden');\n                setMuted.addClass('hidden');\n                unsetMuted.removeClass('hidden');\n                break;\n        }\n    };\n\n    /**\n     * Show or hide the add / remove user as contact option in the header dropdown menu.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} state the contact state.\n     */\n    var renderIsContact = function(header, body, footer, state) {\n        var addContact = header.find(SELECTORS.ACTION_REQUEST_ADD_CONTACT);\n        var removeContact = header.find(SELECTORS.ACTION_REQUEST_REMOVE_CONTACT);\n\n        switch (state) {\n            case 'pending-contact':\n                addContact.addClass('hidden');\n                removeContact.addClass('hidden');\n                break;\n            case 'contact':\n                addContact.addClass('hidden');\n                removeContact.removeClass('hidden');\n                break;\n            case 'non-contact':\n                addContact.removeClass('hidden');\n                removeContact.addClass('hidden');\n                break;\n        }\n    };\n\n    /**\n     * Show or hide confirm action from confirm dialogue is loading.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} isLoading confirm action is loading.\n     */\n    var renderLoadingConfirmAction = function(header, body, footer, isLoading) {\n        var dialogue = getConfirmDialogueContainer(body);\n        var buttons = dialogue.find('button');\n        var buttonText = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_BUTTON_TEXT);\n        var loadingIcon = dialogue.find(SELECTORS.LOADING_ICON_CONTAINER);\n\n        if (isLoading) {\n            buttons.prop('disabled', true);\n            buttonText.addClass('hidden');\n            loadingIcon.removeClass('hidden');\n        } else {\n            buttons.prop('disabled', false);\n            buttonText.removeClass('hidden');\n            loadingIcon.addClass('hidden');\n        }\n    };\n\n    /**\n     * Show or hide the header and footer content for edit mode.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} inEditMode In edit mode or not.\n     */\n    var renderInEditMode = function(header, body, footer, inEditMode) {\n        var messages = null;\n\n        if (inEditMode) {\n            messages = body.find(SELECTORS.MESSAGE_NOT_SELECTED);\n            messages.find(SELECTORS.MESSAGE_NOT_SELECTED_ICON).removeClass('hidden');\n            hideHeaderContent(header);\n            showHeaderEditMode(header);\n        } else {\n            messages = getMessagesContainer(body);\n            messages.find(SELECTORS.MESSAGE_NOT_SELECTED_ICON).addClass('hidden');\n            messages.find(SELECTORS.MESSAGE_SELECTED_ICON).addClass('hidden');\n            showHeaderContent(header);\n            hideHeaderEditMode(header);\n        }\n    };\n\n    /**\n     * Select or unselect messages.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} data The messages to select or unselect.\n     */\n    var renderSelectedMessages = function(header, body, footer, data) {\n        var hasSelectedMessages = data.count > 0;\n\n        if (data.add.length) {\n            data.add.forEach(function(messageId) {\n                var message = getMessageElement(body, messageId);\n                message.find(SELECTORS.MESSAGE_NOT_SELECTED_ICON).addClass('hidden');\n                message.find(SELECTORS.MESSAGE_SELECTED_ICON).removeClass('hidden');\n                message.attr('aria-checked', true);\n            });\n        }\n\n        if (data.remove.length) {\n            data.remove.forEach(function(messageId) {\n                var message = getMessageElement(body, messageId);\n\n                if (hasSelectedMessages) {\n                    message.find(SELECTORS.MESSAGE_NOT_SELECTED_ICON).removeClass('hidden');\n                }\n\n                message.find(SELECTORS.MESSAGE_SELECTED_ICON).addClass('hidden');\n                message.attr('aria-checked', false);\n            });\n        }\n\n        setMessagesSelectedCount(header, data.count);\n    };\n\n    /**\n     * Show or hide the require add contact panel.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} data Whether the user has to be added a a contact.\n     * @return {Object} jQuery promise\n     */\n    var renderRequireAddContact = function(header, body, footer, data) {\n        if (data.show && !data.hasMessages) {\n            return Str.get_strings([\n                    {\n                        key: 'requirecontacttomessage',\n                        component: 'core_message',\n                        param: data.user.fullname\n                    },\n                    {\n                        key: 'isnotinyourcontacts',\n                        component: 'core_message',\n                        param: data.user.fullname\n                    }\n                ])\n                .then(function(strings) {\n                    var title = strings[1];\n                    var text = strings[0];\n                    return showConfirmDialogue(\n                        header,\n                        body,\n                        footer,\n                        [SELECTORS.ACTION_REQUEST_ADD_CONTACT],\n                        text,\n                        title,\n                        false,\n                        true\n                    );\n                });\n        } else {\n            return hideConfirmDialogue(header, body, footer);\n        }\n    };\n\n    /**\n     * Show or hide the self-conversation message.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} displayMessage should the message be displayed?.\n     * @return {Object|true} jQuery promise\n     */\n    var renderSelfConversationMessage = function(header, body, footer, displayMessage) {\n        var container = getSelfConversationMessageContainer(body);\n        if (displayMessage) {\n            container.removeClass('hidden');\n        } else {\n            container.addClass('hidden');\n        }\n        return true;\n    };\n\n    /**\n     * Show or hide the require add contact panel.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} userFullName Full name of the other user.\n     * @return {Object|true} jQuery promise\n     */\n    var renderContactRequestSent = function(header, body, footer, userFullName) {\n        var container = getContactRequestSentContainer(body);\n        if (userFullName) {\n            return Str.get_string('yourcontactrequestpending', 'core_message', userFullName)\n                .then(function(string) {\n                    container.find(SELECTORS.TEXT).text(string);\n                    container.removeClass('hidden');\n                    return string;\n                });\n        } else {\n            container.addClass('hidden');\n            return true;\n        }\n    };\n\n    /**\n     * Reset the UI to the initial state.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @return {Bool}\n     */\n    var renderReset = function(header, body, footer) {\n        hideConfirmDialogue(header, body, footer);\n        hideContactRequestSentContainer(body);\n        hideSelfConversationMessageContainer(body);\n        hideAllHeaderElements(header);\n        showHeaderPlaceholder(header);\n        hideAllFooterElements(footer);\n        showFooterPlaceholder(footer);\n        return true;\n    };\n\n    var render = function(header, body, footer, patch) {\n        var configs = [\n            {\n                // Resetting the UI needs to come first, if it's required.\n                reset: renderReset\n            },\n            {\n                // Any async rendering (stuff that requires templates, strings etc) should\n                // go in here.\n                conversation: renderConversation,\n                header: renderHeader,\n                footer: renderFooter,\n                confirmBlockUser: renderConfirmBlockUser,\n                confirmUnblockUser: renderConfirmUnblockUser,\n                confirmAddContact: renderConfirmAddContact,\n                confirmRemoveContact: renderConfirmRemoveContact,\n                confirmDeleteSelectedMessages: renderConfirmDeleteSelectedMessages,\n                confirmDeleteConversation: renderConfirmDeleteConversation,\n                confirmContactRequest: renderConfirmContactRequest,\n                requireAddContact: renderRequireAddContact,\n                selfConversationMessage: renderSelfConversationMessage,\n                contactRequestSent: renderContactRequestSent\n            },\n            {\n                loadingMembers: renderLoadingMembers,\n                loadingFirstMessages: renderLoadingFirstMessages,\n                loadingMessages: renderLoadingMessages,\n                isBlocked: renderIsBlocked,\n                isContact: renderIsContact,\n                isFavourite: renderIsFavourite,\n                isMuted: renderIsMuted,\n                loadingConfirmAction: renderLoadingConfirmAction,\n                inEditMode: renderInEditMode,\n                showEmojiPicker: renderShowEmojiPicker,\n                showEmojiAutoComplete: renderShowEmojiAutoComplete,\n            },\n            {\n                // Scrolling should be last to make sure everything\n                // on the page is visible.\n                scrollToMessage: renderScrollToMessage,\n                selectedMessages: renderSelectedMessages\n            }\n        ];\n        // Helper function to process each of the configs above.\n        var processConfig = function(config) {\n            var results = [];\n\n            for (var key in patch) {\n                if (config.hasOwnProperty(key)) {\n                    var renderFunc = config[key];\n                    var patchValue = patch[key];\n                    results.push(renderFunc(header, body, footer, patchValue));\n                }\n            }\n\n            return results;\n        };\n\n        // The first config is special because it resets the UI.\n        var renderingPromises = processConfig(configs[0]);\n        // The second config is special because it contains async rendering.\n        renderingPromises = renderingPromises.concat(processConfig(configs[1]));\n\n        // Wait for the async rendering to complete before processing the\n        // rest of the configs, in order.\n        return $.when.apply($, renderingPromises)\n            .then(function() {\n                for (var i = 2; i < configs.length; i++) {\n                    processConfig(configs[i]);\n                }\n\n                return;\n            })\n            .catch(Notification.exception);\n    };\n\n    return {\n        render: render,\n    };\n});\n"],"names":["define","$","Notification","Str","Templates","UserDate","Constants","SELECTORS","TEMPLATES","CONVERSATION_TYPES","getMessagesContainer","body","find","CONTENT_MESSAGES_CONTAINER","getSelfConversationMessageContainer","SELF_CONVERSATION_MESSAGE_CONTAINER","getContactRequestSentContainer","CONTACT_REQUEST_SENT_MESSAGE_CONTAINER","getFooterContentContainer","footer","CONTENT_MESSAGES_FOOTER_CONTAINER","getFooterEditModeContainer","CONTENT_MESSAGES_FOOTER_EDIT_MODE_CONTAINER","getFooterPlaceholderContainer","PLACEHOLDER_CONTAINER","showFooterPlaceholder","removeClass","getFooterRequireContactContainer","CONTENT_MESSAGES_FOOTER_REQUIRE_CONTACT_CONTAINER","getFooterRequireUnblockContainer","CONTENT_MESSAGES_FOOTER_REQUIRE_UNBLOCK_CONTAINER","getFooterUnableToMessageContainer","CONTENT_MESSAGES_FOOTER_UNABLE_TO_MESSAGE_CONTAINER","hideAllFooterElements","addClass","hideFooterContent","hideFooterEditMode","hideFooterPlaceholder","hideFooterRequireContact","hideFooterRequireUnblock","hideFooterUnableToMessage","getContentPlaceholderContainer","CONTENT_PLACEHOLDER_CONTAINER","getHeaderContent","header","HEADER","showHeaderContent","hideHeaderContent","getHeaderEditMode","HEADER_EDIT_MODE","hideHeaderEditMode","getHeaderPlaceholderContainer","HEADER_PLACEHOLDER_CONTAINER","showHeaderPlaceholder","hideHeaderPlaceholder","getMessageElement","messageId","getDayElement","dayTimeCreated","getMoreMessagesLoadingIconContainer","MORE_MESSAGES_LOADING_ICON_CONTAINER","getConfirmDialogueContainer","root","CONFIRM_DIALOGUE_CONTAINER","showConfirmDialogueContainer","container","siblings","attr","hideConfirmDialogueContainer","removeAttr","formatMessagesForTemplate","messages","datesCache","map","message","id","isread","isRead","fromloggedinuser","fromLoggedInUser","userfrom","userFrom","text","formattedtime","timeCreated","renderConversation","data","renderingPromises","hasAddDays","days","add","length","hasAddMessages","hasUpdateMessages","update","timestampsToFormat","datesCachePromise","Deferred","resolve","promise","concat","reduce","carry","day","value","timestamps","push","before","after","get_string","then","format","requests","timestamp","get","formattedTimes","index","messagesContainer","daysRenderPromises","render","DAY","when","apply","forEach","html","element","insertBefore","append","catch","renderAddDays","messagesData","formattedMessages","MESSAGES","messageList","messageHtml","DAY_MESSAGES_CONTAINER","renderAddMessages","formattedTime","LOADING_ICON_CONTAINER","TIME_CREATED","sendState","loading","time","retry","RETRY_SEND","TEXT_CONTAINER","errorMessage","messageContainer","ERROR_MESSAGE_CONTAINER","ERROR_MESSAGE","renderUpdateMessages","remove","renderRemoveDays","renderRemoveMessages","renderHeader","headerContainer","template","HEADER_PUBLIC","context","showrouteback","type","PRIVATE","showControls","HEADER_PRIVATE","HEADER_PRIVATE_NO_CONTROLS","SELF","HEADER_SELF","js","replaceNodeContents","renderFooter","get_strings","key","component","param","user","fullname","strings","title","footerContainer","TITLE","TEXT","showFooterRequireContact","showFooterEditMode","showFooterContent","showFooterRequireUnblock","showFooterUnableToMessage","renderScrollToMessage","position","scrollTop","top","renderLoadingMembers","isLoadingMembers","renderLoadingFirstMessages","isLoadingFirstMessages","hideMessagesContainer","showContentPlaceholder","showMessagesContainer","hideContentPlaceholder","renderLoadingMessages","isLoading","showMoreMessagesLoadingIcon","hideMoreMessagesLoadingIcon","renderShowEmojiPicker","show","EMOJI_PICKER_CONTAINER","getEmojiPickerContainer","EMOJI_PICKER_SEARCH_INPUT","focus","renderShowEmojiAutoComplete","EMOJI_AUTO_COMPLETE_CONTAINER","getEmojiAutoCompleteContainer","showConfirmDialogue","buttonSelectors","bodyText","headerText","canCancel","skipHeader","showOk","dialogue","buttons","selector","cancelButton","CONFIRM_DIALOGUE_CANCEL_BUTTON","okayButton","CONFIRM_DIALOGUE_OKAY_BUTTON","CONFIRM_DIALOGUE_TEXT","dialogueHeader","CONFIRM_DIALOGUE_HEADER","CONFIRM_DIALOGUE","prepend","button","CAN_RECEIVE_FOCUS","filter","first","hideConfirmDialogue","hideCheckDeleteDialogue","renderConfirmBlockUser","canmessageevenifblocked","string","ACTION_CONFIRM_BLOCK","renderConfirmUnblockUser","ACTION_CONFIRM_UNBLOCK","renderConfirmAddContact","ACTION_CONFIRM_ADD_CONTACT","renderConfirmRemoveContact","ACTION_CONFIRM_REMOVE_CONTACT","renderConfirmDeleteSelectedMessages","showmessage","canDeleteMessagesForAllUsers","showCheckDeleteDialogue","ACTION_CONFIRM_DELETE_SELECTED_MESSAGES","renderConfirmDeleteConversation","ACTION_CONFIRM_DELETE_CONVERSATION","renderConfirmContactRequest","ACTION_ACCEPT_CONTACT_REQUEST","ACTION_DECLINE_CONTACT_REQUEST","DELETE_MESSAGES_FOR_ALL_USERS_TOGGLE_CONTAINER","checkboxRegion","DELETE_MESSAGES_FOR_ALL_USERS_TOGGLE","prop","renderIsBlocked","isBlocked","ACTION_REQUEST_BLOCK","ACTION_REQUEST_UNBLOCK","renderIsFavourite","state","favouriteIcon","FAVOURITE_ICON_CONTAINER","addFavourite","ACTION_CONFIRM_FAVOURITE","removeFavourite","ACTION_CONFIRM_UNFAVOURITE","renderIsMuted","muteIcon","MUTED_ICON_CONTAINER","setMuted","ACTION_CONFIRM_MUTE","unsetMuted","ACTION_CONFIRM_UNMUTE","renderIsContact","addContact","ACTION_REQUEST_ADD_CONTACT","removeContact","ACTION_REQUEST_REMOVE_CONTACT","renderLoadingConfirmAction","buttonText","CONFIRM_DIALOGUE_BUTTON_TEXT","loadingIcon","renderInEditMode","inEditMode","MESSAGE_NOT_SELECTED","MESSAGE_NOT_SELECTED_ICON","showHeaderEditMode","MESSAGE_SELECTED_ICON","renderSelectedMessages","hasSelectedMessages","count","MESSAGES_SELECTED_COUNT","setMessagesSelectedCount","renderRequireAddContact","hasMessages","renderSelfConversationMessage","displayMessage","renderContactRequestSent","userFullName","renderReset","hideContactRequestSentContainer","hideSelfConversationMessageContainer","hideAllHeaderElements","patch","configs","reset","conversation","confirmBlockUser","confirmUnblockUser","confirmAddContact","confirmRemoveContact","confirmDeleteSelectedMessages","confirmDeleteConversation","confirmContactRequest","requireAddContact","selfConversationMessage","contactRequestSent","loadingMembers","loadingFirstMessages","loadingMessages","isContact","isFavourite","isMuted","loadingConfirmAction","showEmojiPicker","showEmojiAutoComplete","scrollToMessage","selectedMessages","processConfig","config","results","hasOwnProperty","renderFunc","patchValue","i","exception"],"mappings":"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"}